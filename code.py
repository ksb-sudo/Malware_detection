import json
import pandas as pd
import numpy as np
import missingno as msno
from sklearn.impute import SimpleImputer
import matplotlib.pyplot as plt
import seaborn as sns

df=pd.read_csv('tek_data.csv')

#checking for numerical type values and object type values
num_var=df.select_dtypes(include=[np.number])
obj_var=df.select_dtypes(include=[np.object])

#del df['Unnamed: 55']
#checking for null values
mask=df.isna()
total=mask.sum()
percent=100*mask.mean()
missing_data=pd.concat([total,percent],axis=1,join='outer',keys=['count missing','percentage_missing'])
missing_data.sort_values(by='percentage_missing',ascending=False,inplace=True)

nullable_columns = df.columns[mask.any()].tolist()
#msno.matrix(df[nullable_columns].sample(10))

#msno.heatmap(df[nullable_columns], figsize=(18,18))


feature_subset=['Machine', 'SizeOfOptionalHeader', 'Characteristics',
       'MajorLinkerVersion', 'MinorLinkerVersion', 'SizeOfCode',
       'SizeOfInitializedData', 'SizeOfUninitializedData',
       'AddressOfEntryPoint', 'BaseOfCode', 'BaseOfData', 'ImageBase',
       'SectionAlignment', 'FileAlignment', 'MajorOperatingSystemVersion'
       ]

#sns.heatmap(df[feature_subset].corr(method='spearman'),square=True,annot=True,cmap='rainbow_r',vmin=-1,vmax=1)



sel_features=['SizeOfCode','AddressOfEntryPoint','BaseOfData','SectionAlignment']

#sns.heatmap(df[sel_features].corr(method='spearman'),square=True,annot=True,cmap='rainbow_r',vmin=-1,vmax=1)
#df['legitimate']

#plt.scatter(x=df['legitimate'],y=df['AddressOfEntryPoint'])

#biivariate analysis
sns.set(rc={'figure.figsize':(15,10)})
#using the pd.crosstab function to find the percentage of particular attributes having 0 or 1 legitimate value.
rel_size_code_and_legitimate=pd.crosstab(df.SizeOfCode,df.legitimate,normalize='index',margins=True)
AddressOfEntryPoint_and_legitimate=pd.crosstab(df.AddressOfEntryPoint,df.legitimate,normalize='index',margins=True)
BaseOfData_and_legitimate=pd.crosstab(df.BaseOfData,df.legitimate,normalize='index',margins=True)
SectionAlignment_and_legitimate=pd.crosstab(df.SectionAlignment,df.legitimate,normalize='index',margins=True)

print(rel_size_code_and_legitimate)
print(AddressOfEntryPoint_and_legitimate[0:5])
print(BaseOfData_and_legitimate[0:5])
print(SectionAlignment_and_legitimate[0:5])

